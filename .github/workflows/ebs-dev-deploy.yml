name: gms backend development deployment workflow
run-name: development server deployment
on:
  workflow_dispatch:
  push:
    branches:
      - "main"
  pull_request:
      types:
          - closed
      branches:
          - main

jobs:
  deploy:
    name: deploy backend
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "yarn"
      - run: yarn install
      - name: Execute application build Script
        run: yarn run build
      - name: Build code bundle
        run: zip distOut.zip -r dist/
      - name: Check Certificate, host variable and keytype
        run: |
          if [ -z "$CERTIFICATE_BASE64" ]; 
          then 
            echo "Certificate is absent";
            exit 1;
          else 
            echo "Certificate Present"; 
          fi;
      - name: Retrieve the secret and decode it to a file
        run: |
          mkdir ~/.ssh
          echo $CERTIFICATE_BASE64 | base64 --decode > ~/.ssh/gms_deploy_access.pem
      - name: change permission for key
        run: |
          sudo chmod 600 ~/.ssh/gms_deploy_access.pem 
      - name: Add server to know Hosts
        run: |
          ssh-keyscan -t ${{vars.KEYTYPE}} ${{vars.HOST}} >> ~/.ssh/known_hosts
      - name: remove remote files
        run: ssh -i "~/.ssh/gms_deploy_access.pem" ubuntu@${{vars.HOST}} 'cd ~/gms-backend/; rm -rf dist/ distOut.zip yarn.lock package.json'
      - name: Copy files over at server
        run: scp -r  -i "~/.ssh/gms_deploy_access.pem" distOut.zip package.json yarn.lock ubuntu@${{vars.HOST}}:~/gms-backend/
      - name: export pm2 and restart pm2 with updated code
        run: ssh -i "~/.ssh/gms_deploy_access.pem" ubuntu@${{vars.HOST}} '. /etc/profile; export PATH=$PATH:$HOME/.nvm/versions/node/v20.10.0/bin; cd $HOME/gms-backend/ && yarn install && unzip distOut.zip && pm2 restart 0'
      - name: remove git sha file from server
        run: | 
          ssh -i "~/.ssh/gms_deploy_access.pem" ubuntu@${{vars.HOST}} 'cd ${HOME}; rm sha-*'
      - name: create sha-version file
        run: |
          ssh -i "~/.ssh/gms_deploy_access.pem" ubuntu@${{vars.HOST}} 'cd ${HOME}; date +"%d-%m-%Y %T" > "sha-${{GIT_SHA}}"
      - name: clean up
        run: |
          rm distOut.zip && \
          rm ~/.ssh/gms_deploy_access.pem
      - name: Completion
        run: echo "Completed"

